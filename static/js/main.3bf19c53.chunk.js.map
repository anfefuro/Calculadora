{"version":3,"sources":["App.jsx","index.js"],"names":["App","useState","salaryBase","setSalaryBase","sumPayForExtraHours","setSumPayForExtraHours","payForBonusRecess","setPayForBonusRecess","lounchAllowance","setLounchAllowance","transAllowance","setTransAllowance","extraHoursForSem","setExtraHoursForSem","recessBonusPayForSem","setRecessBonusPayForSem","totalSemestralBonus","setTotalSemestralBonus","totalServicesBonus","setTotalServicesBonus","totalValueForBonusConcept","setTotalValueForBonusConcept","christmasBonus","setChristmasBonus","profitSharing","setProfitSharing","semestralChoice","setSemestralChoice","christmas","useEffect","parseInt","className","htmlFor","onChange","event","target","value","type","id","placeholder","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bf19c53.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n//import Card from './components/Card'\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [salaryBase, setSalaryBase] = useState(0);\r\n    const [sumPayForExtraHours, setSumPayForExtraHours] = useState(0);\r\n    const [payForBonusRecess, setPayForBonusRecess] = useState(0);\r\n\r\n    const [lounchAllowance, setLounchAllowance] = useState(0);\r\n    const [transAllowance, setTransAllowance] = useState(0);\r\n    const [extraHoursForSem, setExtraHoursForSem] = useState(0);\r\n    const [recessBonusPayForSem, setRecessBonusPayForSem] = useState(0);\r\n\r\n    const [totalSemestralBonus, setTotalSemestralBonus] = useState(0);\r\n    const [totalServicesBonus, setTotalServicesBonus] = useState(0);\r\n    const [totalValueForBonusConcept, setTotalValueForBonusConcept] = useState(0);\r\n\r\n    const [christmasBonus, setChristmasBonus] = useState(0);\r\n    const [profitSharing, setProfitSharing] = useState(0);\r\n\r\n    const [semestralChoice, setSemestralChoice] = useState (0);\r\n\r\n    const salary = (event) => {\r\n        setSalaryBase(event.target.value);     \r\n    }\r\n\r\n    const extraHours = (event) => {\r\n        setSumPayForExtraHours(parseInt(event.target.value));\r\n    }\r\n\r\n    const payForBonus = (event) => {\r\n        setPayForBonusRecess(event.target.value);\r\n    }\r\n\r\n    const christmas = 548696;\r\n\r\n    //Second semestre: true - First semestre: false.\r\n    useEffect(()=>{\r\n        salaryBase > 0 ?\r\n            setSemestralChoice(true) :\r\n            setSemestralChoice(0)\r\n\r\n        salaryBase > 0 ? \r\n            setLounchAllowance(129828) :\r\n            setLounchAllowance(0)\r\n\r\n        salaryBase <= 2725578 && salaryBase > 0 ? \r\n            setTransAllowance(106454) : \r\n            setTransAllowance(0)\r\n    }, [salaryBase]) \r\n    //______________________________________________\r\n\r\n    useEffect(()=>{\r\n        sumPayForExtraHours > 0 ?\r\n            setExtraHoursForSem(parseInt(parseInt(sumPayForExtraHours) / 6)) :\r\n            setExtraHoursForSem(0)\r\n    }, [sumPayForExtraHours])\r\n\r\n    useEffect(() => {\r\n        payForBonusRecess > 0 ?\r\n            setRecessBonusPayForSem(parseInt(parseInt(payForBonusRecess) / 6)) :\r\n            setRecessBonusPayForSem(0)\r\n    }, [payForBonusRecess])\r\n\r\n    useEffect(() => {\r\n        totalSemestralBonus > 0 ?\r\n            setTotalServicesBonus(parseInt(parseInt(totalSemestralBonus)*0.583333)):\r\n            setTotalServicesBonus(0)\r\n    },[totalSemestralBonus])\r\n\r\n    //_______________________________________________\r\n\r\n    useEffect(() => {\r\n        semestralChoice === true ?\r\n            setChristmasBonus(parseInt((parseInt(christmas*1.35))+((parseInt(salaryBase)-(parseInt(christmas*2)))*0.3))) :\r\n            setChristmasBonus(0)   \r\n    }, [semestralChoice, christmas, salaryBase])\r\n\r\n    useEffect(() => {\r\n        christmasBonus === 0 ?\r\n            setProfitSharing(298106) :\r\n            setProfitSharing(0)\r\n    }, [christmasBonus])\r\n    //________________________________________________\r\n\r\n    useEffect(() => {    \r\n        salaryBase > 0 ?\r\n            setTotalSemestralBonus(parseInt(lounchAllowance+transAllowance+extraHoursForSem+recessBonusPayForSem+(parseInt(christmasBonus)/6))+parseInt(salaryBase)+(parseInt(profitSharing))) :\r\n            setTotalSemestralBonus(0)\r\n\r\n        salaryBase > 0 ?\r\n            setTotalValueForBonusConcept(parseInt(totalServicesBonus+christmasBonus)+parseInt(totalSemestralBonus)) :\r\n            setTotalValueForBonusConcept(0)\r\n\r\n    }, [semestralChoice, lounchAllowance, transAllowance, extraHoursForSem, recessBonusPayForSem, christmasBonus, salaryBase, profitSharing, christmas, totalServicesBonus, totalSemestralBonus])\r\n    //___________________________________________________\r\n\r\n    return (\r\n        <div className=\"container mx-auto w-3/5 border mb-5 rounded\">\r\n            <h1 className=\"text-2xl p-5 text-center border text-gray-900 bg-gray-200 font-bold\">CALCULO PRIMAS SEMESTRALES SEGUNDO SEMESTRE 2021</h1>\r\n            <div className=\"flex flex-wrap\">\r\n                <form className=\"w-full sm:w-1/2 text-center p-5\">\r\n                    <label className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\" htmlFor=\"caja_1\">Sueldo básico a Noviembre 30 (*)</label>\r\n                    <br></br>\r\n                    <input onChange={salary} className=\"border shadow m-2 w-full rounded leading-tight focus:outline-none focus:shadow-outline\" type=\"number\" id=\"caja_1\" placeholder=\"Ingrese aquí el valor requerido.\"></input>\r\n                    <p className=\"text-red-500 text-xs italic\">Este espacio no debe permanecer vacío.</p>\r\n                    <br></br>\r\n\r\n                    <h1 className=\"font-bold text-2xl pt-5 text-gray-600\">VALORES PROPORCIONALES</h1>\r\n                    <br></br>\r\n\r\n                    <label className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\" htmlFor=\"caja_2\">Suma de lo pagado por horas extras en el semestre</label>\r\n                    <br></br>\r\n                    <input onChange={extraHours} className=\"shadow border m-2 w-full rounded leading-tight focus:outline-none focus:shadow-outline\" type=\"number\" name=\"caja_2\" id=\"caja_2\" placeholder=\"Ingrese aquí el valor requerido.\"></input>\r\n                    <p className=\"text-red-500 text-xs italic\">Este espacio no debe permanecer vacío.</p>\r\n                    <br></br>\r\n\r\n                    <label className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\" htmlFor=\"caja_3\">Valor pagado por prima de vacaciones en el semestre\r\n                    (JULIO 1 A DICIEMBRE 31)</label>\r\n                    <br></br>\r\n                    <input onChange={payForBonus} className=\"shadow border m-2 w-full rounded leading-tight focus:outline-none focus:shadow-outline\" type=\"number\" name=\"caja_3\" id=\"caja_3\" placeholder=\"Ingrese aquí el valor requerido.\"></input>\r\n                    <p className=\"text-red-500 text-xs italic\">Este espacio no debe permanecer vacío.</p>\r\n                </form>\r\n                <div className=\"w-full sm:w-1/2 pb-5 px-3\">\r\n                    <h1 className=\"text-lg font-bold pt-2 m-2 text-center text-gray-600\">Subsidio de almuerzo con efecto prestacional</h1>\r\n                    <h1 className=\"text-2xl font-bold text-center\">${lounchAllowance}</h1>\r\n                    \r\n                    <h1 className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\">Subsidio de transporte</h1>\r\n                    <h1 className=\"text-2xl font-bold text-center\">${transAllowance}</h1>\r\n                    \r\n                    <h1 className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\">Horas extras en el semestre</h1>\r\n                    <h1 className=\"text-2xl font-bold text-center\">${extraHoursForSem}</h1>\r\n                    \r\n                    <h1 className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\">Prima de vacaciones pagadas en el semestre</h1>\r\n                    <h1 className=\"text-2xl font-bold text-center\">${recessBonusPayForSem}</h1>\r\n                    \r\n                    <h1 className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\">TOTAL PRIMA SEMESTRAL</h1>\r\n                    <h1 className=\"text-2xl font-bold text-center\">${totalSemestralBonus}</h1>\r\n                    \r\n                    <h1 className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\">TOTAL PRIMA SERVICIOS</h1>\r\n                    <h1 className=\"text-2xl font-bold text-center\">${totalServicesBonus}</h1>\r\n                    \r\n                    <h1 className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\">BONIFICACION DE NAVIDAD</h1>\r\n                    <h1 className=\"text-2xl font-bold text-center\">${christmasBonus}</h1>\r\n                    \r\n                    <h1 className=\"text-lg font-bold pt-5 m-2 text-center text-gray-600\">VALOR TOTAL POR CONCEPTO DE PRIMAS</h1>\r\n                    <h1 className=\"text-2xl font-bold text-center\">${totalValueForBonusConcept}</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}